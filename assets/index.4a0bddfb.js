import{r as e,W as t,C as n,R as a,a as o}from"./vendor.b97de026.js";var s=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"},{indexed:!1,internalType:"string",name:"message",type:"string"}],name:"NewWave",type:"event"},{inputs:[],name:"getAllWaves",outputs:[{components:[{internalType:"address",name:"waver",type:"address"},{internalType:"string",name:"message",type:"string"},{internalType:"uint256",name:"timestamp",type:"uint256"}],internalType:"struct WavePortal.Wave[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalWaves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"_message",type:"string"}],name:"wave",outputs:[],stateMutability:"nonpayable",type:"function"}];const l=()=>{const[o,l]=e.exports.useState(""),r="0x9E45cCd25482114fBe6Eb2f8AEB03f80f2576079",i=s,[c,u]=e.exports.useState([]),[m,d]=e.exports.useState("");e.exports.useEffect((()=>{let e;const a=(e,t,n)=>{console.log("NewWave",e,t,n),u((a=>[...a,{address:e,timestamp:new Date(1e3*t),message:n}]))};if(window.ethereum){const o=new t(window.ethereum).getSigner();e=new n(r,i,o),e.on("NewWave",a)}return()=>{e&&e.off("NewWave",a)}}),[]);return e.exports.useEffect((()=>{(async()=>{try{const{ethereum:e}=window;if(!e)return void console.log("Make sure you have metamask!");console.log("We have the ethereum object",e);const t=await e.request({method:"eth_accounts"});if(0!==t.length){const e=t[0];console.log("Found an authorized account:",e),l(e)}else console.log("No authorized account found")}catch(e){console.log(e)}})()}),[]),a.createElement("div",{className:"mainContainer"},a.createElement("div",{className:"dataContainer"},a.createElement("div",{className:"header"},"ðŸ‘‹ Let's Connect !"),a.createElement("div",{className:"bio"},"I am Arjun. Connect your Ethereum wallet and wave at me!"),a.createElement("div",{className:"textBox"},"      ",a.createElement("input",{type:"text",name:"topicBox",placeholder:"Enter your message here...",onChange:e=>d(e.target.value)})),a.createElement("button",{className:"waveButton",onClick:async e=>{try{const{ethereum:a}=window;if(e=m,console.log("Current Message",e),a){const o=new t(a).getSigner(),s=new n(r,i,o);let l=await s.getTotalWaves();console.log("Retrieved total wave count...",l.toNumber());const c=s.wave(e,{gasLimit:3e5});console.log("Mining...",c.hash),await c.wait(),console.log("Mined -- ",c.hash),l=await s.getTotalWaves(),console.log("Retrieved total wave count...",l.toNumber())}else console.log("Ethereum object doesn't exist!")}catch(a){console.log(a)}}},"Wave at Me"),!o&&a.createElement("button",{className:"waveButton",onClick:async()=>{try{const{ethereum:e}=window;if(!e)return void alert("Get MetaMask!");const t=await e.request({method:"eth_requestAccounts"});console.log("Connected",t[0]),l(t[0])}catch(e){console.log(e)}}},"Connect Wallet"),c.map(((e,t)=>a.createElement("div",{key:t,style:{backgroundColor:"OldLace",marginTop:"16px",padding:"8px"}},a.createElement("div",null,"Address: ",e.address),a.createElement("div",null,"Time: ",e.timestamp.toString()),a.createElement("div",null,"Message: ",e.message))))))};o.render(a.createElement(a.StrictMode,null,a.createElement(l,null)),document.getElementById("root"));
